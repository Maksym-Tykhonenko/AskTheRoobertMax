import React, {
  useEffect as useRoobertEffect,
  useLayoutEffect as useRoobertLayout,
  useRef as useRoobertRef,
} from 'react';
import {
  Animated as RoobertAnim,
  View as RoobertView,
  Easing as RoobertEase,
  Dimensions as RoobertDims,
  Image,
} from 'react-native';
import { useNavigation as useRoobertNav } from '@react-navigation/native';
import AsyncStorage from '@react-native-async-storage/async-storage';
import Video from 'react-native-video';

const STORAGE_FLAG = 'ask_the_roobert_onboard';

const AskTheRoobertLoading: React.FC = () => {
  const { width, height } = RoobertDims.get('window');
  const navigation = useRoobertNav();

  // –∞–Ω—ñ–º–∞—Ü—ñ—ó (–ª–µ–≥–∫–µ –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è + —Ñ–µ–π–¥-—ñ–Ω)
  const scaleAnim = useRoobertRef(new RoobertAnim.Value(0)).current;
  const fadeAnim = useRoobertRef(new RoobertAnim.Value(0)).current;

  useRoobertEffect(() => {
    RoobertAnim.spring(scaleAnim, {
      toValue: 1,
      tension: 65,
      friction: 6,
      useNativeDriver: true,
    }).start();

    RoobertAnim.timing(fadeAnim, {
      toValue: 1,
      duration: 1900,
      easing: RoobertEase.inOut(RoobertEase.ease),
      useNativeDriver: true,
    }).start();
  }, [scaleAnim, fadeAnim]);

  // –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥—É (–ù–ê–í–Ü–ì–ê–¶–Ü–Æ –í–ö–õ–Æ–ß–ò –¢–£–¢, –ö–û–õ–ò –¢–†–ï–ë–ê)
  useRoobertLayout(() => {
    (async () => {
      let needsOnboarding = false;

      try {
        const alreadySeen = await AsyncStorage.getItem(STORAGE_FLAG);
        if (!alreadySeen) {
          needsOnboarding = true;
          await AsyncStorage.setItem(STORAGE_FLAG, 'done');
        }
      } catch (e) {
        if (__DEV__) console.warn('AskTheRoobertLoading onboarding error:', e);
      }

      // üëâ –ö–û–õ–ò –ì–û–¢–û–í–ò–ô ‚Äî —Ä–æ–∑–∫–æ–º–µ–Ω—Ç—É–π –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é:
      // navigation.replace(
      //   needsOnboarding ? 'AskTheRoobertOnboarding' : 'AskTheRoobertToOtherPgs'
      // );
    })();
  }, [navigation]);

  // ref –Ω–∞ Video (–ø—Ä–æ –≤—Å—è–∫ –≤–∏–ø–∞–¥–æ–∫, —è–∫—â–æ –∑–∞—Ö–æ—á–µ—à –∫–µ—Ä—É–≤–∞—Ç–∏ –≤—Ä—É—á–Ω—É)
  const videoRef = useRoobertRef<Video>(null);

  return (
    <RoobertView style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>
      {/* –±–µ–∫–≥—Ä–∞—É–Ω–¥-–≥—Ä–∞–¥—ñ—î–Ω—Ç */}
      <Image
        source={require('../theAskAssetsRoobert/theAskImagesRoobert/roobertRadialGradient.png')}
        style={{ position: 'absolute', top: 0, left: 0, width, height }}
      />

      {/* —à–∞—Ä –∑ –∞–Ω—ñ–º–∞—Ü—ñ—î—é –ø–æ—è–≤–∏ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ) */}
      <RoobertAnim.View style={{ opacity: fadeAnim, transform: [{ scale: scaleAnim }] }}>
        <RoobertView pointerEvents="none">
          <Video
            ref={videoRef}
            source={require('../theAskAssetsRoobert/theAskVideosRoobert/kangarooHand.mp4')}
            style={{ width, height: width }}   // –∫–≤–∞–¥—Ä–∞—Ç–Ω–µ –≤—ñ–¥–µ–æ, —Ü–µ–Ω—Ç—Ä—É—î—Ç—å—Å—è
            resizeMode="contain"
            controls={false}
            // üîÅ –æ—Å–Ω–æ–≤–Ω–µ ‚Äî –∑–∞—Ü–∏–∫–ª–∏—Ç–∏:
            repeat
            // —è–∫—â–æ —Ö–æ—á–µ—à —â–µ –π –¥—É–±–ª—é—é—á—É –≥–∞—Ä–∞–Ω—Ç—ñ—é –ª—É–ø—É:
            onEnd={() => {
              try {
                videoRef.current?.seek(0);
              } catch {}
            }}
            // –∑–≤—É–∫ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –≤–∏–º–∫–Ω–µ–Ω–æ
            muted
            volume={0}
            // –¥–ª—è iOS ‚Äî —â–æ–± –∫—Ä—É—Ç–∏–≤—Å—è –Ω–∞–≤—ñ—Ç—å —É —Ç–∏—Ö–æ–º—É —Ä–µ–∂–∏–º—ñ
            playsInSilentModeIOS
            ignoreSilentSwitch="ignore"
            // –∞–≤—Ç–æ–ø–ª–µ–π
            paused={false}
            // –∫–æ—Ä–∏—Å–Ω—ñ –∫–æ–ª–±–µ–∫–∏ –¥–ª—è –¥–µ–±–∞–≥—É
            onError={(e) => __DEV__ && console.warn('Video error', e)}
            onLoad={() => __DEV__ && console.log('Video loaded')}
          />
        </RoobertView>
      </RoobertAnim.View>
    </RoobertView>
  );
};

export default AskTheRoobertLoading;

